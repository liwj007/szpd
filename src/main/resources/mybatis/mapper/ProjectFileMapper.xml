<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liwj.szpd.mapper.ProjectFileMapper">
  <resultMap id="BaseResultMap" type="com.liwj.szpd.model.ProjectFile">
    <constructor>
      <idArg column="ID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="REVISION" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="CREATED_BY" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="CREATED_TIME" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="STEP" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="NAME" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="PATH" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="PROJECT_ID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="CATEGORY" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, REVISION, CREATED_BY, CREATED_TIME, STEP, NAME, PATH, PROJECT_ID, CATEGORY
  </sql>
  <select id="selectByExample" parameterType="com.liwj.szpd.model.ProjectFileExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from PROJECT_FILE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from PROJECT_FILE
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from PROJECT_FILE
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.liwj.szpd.model.ProjectFileExample">
    delete from PROJECT_FILE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liwj.szpd.model.ProjectFile">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into PROJECT_FILE (REVISION, CREATED_BY, CREATED_TIME, 
      STEP, NAME, PATH, PROJECT_ID, 
      CATEGORY)
    values (#{revision,jdbcType=INTEGER}, #{createdBy,jdbcType=INTEGER}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{step,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, #{projectId,jdbcType=INTEGER}, 
      #{category,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.liwj.szpd.model.ProjectFile">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into PROJECT_FILE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="revision != null">
        REVISION,
      </if>
      <if test="createdBy != null">
        CREATED_BY,
      </if>
      <if test="createdTime != null">
        CREATED_TIME,
      </if>
      <if test="step != null">
        STEP,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="path != null">
        PATH,
      </if>
      <if test="projectId != null">
        PROJECT_ID,
      </if>
      <if test="category != null">
        CATEGORY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="revision != null">
        #{revision,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="step != null">
        #{step,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="category != null">
        #{category,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.liwj.szpd.model.ProjectFileExample" resultType="java.lang.Long">
    select count(*) from PROJECT_FILE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update PROJECT_FILE
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.revision != null">
        REVISION = #{record.revision,jdbcType=INTEGER},
      </if>
      <if test="record.createdBy != null">
        CREATED_BY = #{record.createdBy,jdbcType=INTEGER},
      </if>
      <if test="record.createdTime != null">
        CREATED_TIME = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.step != null">
        STEP = #{record.step,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.path != null">
        PATH = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.projectId != null">
        PROJECT_ID = #{record.projectId,jdbcType=INTEGER},
      </if>
      <if test="record.category != null">
        CATEGORY = #{record.category,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update PROJECT_FILE
    set ID = #{record.id,jdbcType=INTEGER},
      REVISION = #{record.revision,jdbcType=INTEGER},
      CREATED_BY = #{record.createdBy,jdbcType=INTEGER},
      CREATED_TIME = #{record.createdTime,jdbcType=TIMESTAMP},
      STEP = #{record.step,jdbcType=INTEGER},
      NAME = #{record.name,jdbcType=VARCHAR},
      PATH = #{record.path,jdbcType=VARCHAR},
      PROJECT_ID = #{record.projectId,jdbcType=INTEGER},
      CATEGORY = #{record.category,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liwj.szpd.model.ProjectFile">
    update PROJECT_FILE
    <set>
      <if test="revision != null">
        REVISION = #{revision,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        CREATED_BY = #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="step != null">
        STEP = #{step,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        PATH = #{path,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        PROJECT_ID = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="category != null">
        CATEGORY = #{category,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liwj.szpd.model.ProjectFile">
    update PROJECT_FILE
    set REVISION = #{revision,jdbcType=INTEGER},
      CREATED_BY = #{createdBy,jdbcType=INTEGER},
      CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      STEP = #{step,jdbcType=INTEGER},
      NAME = #{name,jdbcType=VARCHAR},
      PATH = #{path,jdbcType=VARCHAR},
      PROJECT_ID = #{projectId,jdbcType=INTEGER},
      CATEGORY = #{category,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liwj.szpd.mapper.PhoneCodeMapper">
  <resultMap id="BaseResultMap" type="com.liwj.szpd.model.PhoneCode">
    <constructor>
      <idArg column="ID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="PHONE" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="CODE" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="EXPIRE" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="STATUS" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="TOKEN" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, PHONE, CODE, EXPIRE, STATUS, TOKEN
  </sql>
  <select id="selectByExample" parameterType="com.liwj.szpd.model.PhoneCodeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from PHONE_CODE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from PHONE_CODE
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from PHONE_CODE
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.liwj.szpd.model.PhoneCodeExample">
    delete from PHONE_CODE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liwj.szpd.model.PhoneCode">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into PHONE_CODE (PHONE, CODE, EXPIRE, 
      STATUS, TOKEN)
    values (#{phone,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{expire,jdbcType=BIGINT}, 
      #{status,jdbcType=INTEGER}, #{token,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.liwj.szpd.model.PhoneCode">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into PHONE_CODE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="phone != null">
        PHONE,
      </if>
      <if test="code != null">
        CODE,
      </if>
      <if test="expire != null">
        EXPIRE,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="token != null">
        TOKEN,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="expire != null">
        #{expire,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.liwj.szpd.model.PhoneCodeExample" resultType="java.lang.Long">
    select count(*) from PHONE_CODE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update PHONE_CODE
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null">
        CODE = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.expire != null">
        EXPIRE = #{record.expire,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.token != null">
        TOKEN = #{record.token,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update PHONE_CODE
    set ID = #{record.id,jdbcType=INTEGER},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      CODE = #{record.code,jdbcType=VARCHAR},
      EXPIRE = #{record.expire,jdbcType=BIGINT},
      STATUS = #{record.status,jdbcType=INTEGER},
      TOKEN = #{record.token,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liwj.szpd.model.PhoneCode">
    update PHONE_CODE
    <set>
      <if test="phone != null">
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        CODE = #{code,jdbcType=VARCHAR},
      </if>
      <if test="expire != null">
        EXPIRE = #{expire,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=INTEGER},
      </if>
      <if test="token != null">
        TOKEN = #{token,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liwj.szpd.model.PhoneCode">
    update PHONE_CODE
    set PHONE = #{phone,jdbcType=VARCHAR},
      CODE = #{code,jdbcType=VARCHAR},
      EXPIRE = #{expire,jdbcType=BIGINT},
      STATUS = #{status,jdbcType=INTEGER},
      TOKEN = #{token,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <select id="findByPhone" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from PHONE_CODE
   where phone=#{phone}
   </select>
</mapper>